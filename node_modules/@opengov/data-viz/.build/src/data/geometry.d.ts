import { IPieSeries } from '.';
export interface ICoordinate {
    x: number;
    y: number;
}
export declare type ICoordinateSystem = {
    x: number;
    y: number;
    width: number;
    height: number;
};
export declare type IDimensions = {
    width: number;
    height: number;
};
export declare type IMargin = {
    left: number;
    right: number;
    top: number;
    bottom: number;
};
export declare type IPolylinePoint = {
    x: number;
    y1: number;
};
export declare type IRectangle = {
    x: number;
    y: number;
    top: number;
    bottom: number;
    left: number;
    right: number;
    width: number;
    height: number;
};
export declare const polylinePoints: (data: IPolylinePoint[]) => string;
export declare const linePath: (data: IPolylinePoint[]) => string;
export declare const calcDimensions: (margin: IMargin, width: number, height: number) => {
    width: number;
    height: number;
    margin: IMargin;
};
export interface IAreasBetween {
    x: number;
    y0: number;
    y1: number;
}
export declare const areasBetween: (data: IAreasBetween[]) => any[];
export declare const calcPieRadius: (series: IPieSeries, dimensions: IDimensions, maxLabelLength?: number, labelHeight?: number, characterWidth?: number) => number;
export declare const rectsDifferent: (a: IRectangle, b: IRectangle) => boolean;
