import { ScaleLinear, scaleOrdinal, ScaleOrdinal, ScalePoint } from 'd3-scale';
import { PieArcDatum } from 'd3-shape';
import { SortOrder } from './enums';
import { ICoordinateSystem, IDimensions, IMargin } from './geometry';
export declare const createColorScale: typeof scaleOrdinal;
export declare const createXPointScale: (data: any, width: number) => ScalePoint<number>;
export declare const createXLinearScale: (extent: number[], width: number) => ScaleLinear<any, number>;
export declare const createXScale: (data: any, width: number) => ScaleOrdinal<any, number>;
export declare const createYScale: (extent: number[], height: number, numOfTicks?: number) => ScaleLinear<any, number>;
export interface IPieSeries {
    data: PieArcDatum<any>[];
    domainKeys: string[];
    allColumns: any[];
}
export interface IPieDataStructure {
    dimensions: IDimensions;
    series: IPieSeries;
    xAxisDomainKey: string;
    colors: any;
    metaMapping: any;
}
export interface IPieDataConfig {
    selectedDomain?: string;
    xAxisDomainKey: string;
    categories: string[];
    coordinateSystem: ICoordinateSystem;
    margin: IMargin;
    sortOrder: SortOrder;
}
export declare const buildPieDataStructure: (data: any[], config: any) => IPieDataStructure;
