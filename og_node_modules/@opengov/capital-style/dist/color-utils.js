"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getMonochromeVizColors = getMonochromeVizColors;
exports.getVizColors = getVizColors;

var _tokens = require("./tokens");

function getMonochromeVizColors(datapoints, startingHue) {
  // datapoints: number of colors needed
  // startingColor: if it should start at a certain color (monochrome only)

  var colors = [];

  // Set starting hue
  if (startingHue == "") {
    var currentHue = _tokens.vizColorValueOrder[0];
  } else {
    var currentHue = startingHue;
  }

  // Set counter variables
  var hues = Math.ceil(datapoints / 9);
  var currentData = 0;
  var valueArray = [];
  var startValue = _tokens.vizColors[currentHue].data;

  // Loop through hues
  for (var i = 0; i < hues; i++) {
    // Append values of this hue to array and sort array
    for (var y = 0; currentData < datapoints && y < 9; y++) {
      currentData++;
      valueArray.push(_tokens.vizColorValueOrder[startValue][y]);
    }
    valueArray = valueArray.sort();

    // Append hex codes to colors array
    var z = currentData - valueArray.length;
    for (var x = 0; x < valueArray.length; x++) {
      colors[z] = _tokens.vizColors[currentHue][valueArray[x]];
      z++;
    }

    // Reset for next hue
    valueArray = [];
    currentHue = _tokens.vizColors[currentHue].nextHue;
    startValue = _tokens.vizColors[currentHue].data;
  }

  return colors;
}

function getVizColors(datapoints) {
  // datapoints: number of colors needed

  var colors = [];
  var orderRepeat = 0;
  var currentHue = 0;

  for (var i = 0; i < datapoints; i++) {
    if ((i + 1) % 20 === 0) {
      orderRepeat++;
      currentHue = 0;
    }
    if (orderRepeat >= 9) {
      orderRepeat = 0;
    }
    var hue = _tokens.vizColorHueOrder[currentHue];
    var value = _tokens.vizColorValueOrder[_tokens.vizColors[hue].data][orderRepeat];
    var baseColor = _tokens.vizColors[hue][value];
    var hoverColor = _tokens.vizColors[hue][value + 100];
    var highlightColor = _tokens.vizColors[hue][_tokens.vizColors[hue].highlight];
    colors.push({ base: baseColor, hover: hoverColor, line: baseColor, highlight: highlightColor });
    currentHue++;
  }

  return colors;
}